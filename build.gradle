plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
}

group = 'com.ollacare'
version = '1.0.1'
sourceCompatibility = '18'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'mysql:mysql-connector-java:8.0.29'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    // Querydsl
    implementation 'com.querydsl:querydsl-jpa'
    // Querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    // java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 대응
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // java.lang.NoClassDefFoundError(javax.annotation.Generated) 발생 대응
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.2'
    //Add for Logstash
    implementation 'net.logstash.logback:logstash-logback-encoder:7.2'
    // cache
    implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '3.1.1'
    // image metadata
    implementation group: 'com.drewnoakes', name: 'metadata-extractor', version: '2.9.1'
    // S3
    implementation 'com.amazonaws:aws-java-sdk:1.12.296'
    implementation 'com.amazonaws:aws-java-sdk-s3'
    // fcm
    implementation 'com.google.firebase:firebase-admin:9.0.0'
    // file image
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    implementation 'org.imgscalr:imgscalr-lib:4.2'
    implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.24'
    implementation group: 'org.apache.pdfbox', name: 'pdfbox-tools', version: '2.0.24'
    // image metadata
    implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '3.1.1'
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    enabled = false
}

def generated='src/main/generated'
sourceSets {
    main.java.srcDirs += [ generated ]
}

tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(generated)
}

clean {
    delete file('src/main/generated')
}